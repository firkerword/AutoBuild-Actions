#=======================================================
# Description: Build OpenWrt using GitHub Actions
# https://github.com/Hyy2001X/AutoBuild-Actions
# Lisence: MIT
# Author: P3TERX
# Modify: Hyy2001X
#=======================================================

name: AutoBuild OpenWrt

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
#  schedule:
#    - cron: 0 21 */3 * *

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: .config
  CUSTOM_SCRIPT: ./Scripts/diy-script.sh
  TZ: Asia/Shanghai
  UPLOAD_RELEASE: true
  UPLOAD_FIRMWARE: true
  UPLOAD_BIN_DIR: false

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
    - name: 检查项目分支
      uses: actions/checkout@main

    - name: 安装编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: 下载固件源码
      run: |
        git clone -b $REPO_BRANCH $REPO_URL openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: 加载自定义设置
      run: |
        chmod +x $CUSTOM_SCRIPT
        cd openwrt
        source $GITHUB_WORKSPACE/$CUSTOM_SCRIPT && Diy-Part1

    - name: 下载安装插件
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: 更改配置
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        cd openwrt
        source $GITHUB_WORKSPACE/$CUSTOM_SCRIPT && Diy-Part2

    - name: 下载安装包
      run: |
        cd openwrt
        make defconfig
        make download -j$(nproc) V=s
        find dl -size -1024c -exec rm -f {} \;
        
    - name: SSH链接管理
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: 开始编译固件
      run: |
        cd openwrt
        make -j$(nproc) || make -j1 V=s

    - name: 创建更新日志
      run: |
        echo "## $(date +"%Y%m%d")-AutoBuild" > update_log.txt
        cd openwrt
        source $GITHUB_WORKSPACE/$CUSTOM_SCRIPT && Diy-Part3
        echo "Artifacts_DATE=$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: 上传固件到Artifacts
      uses: actions/upload-artifact@main
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      with:
        name: OpenWrt_Firmware_${{ env.Artifacts_DATE }}
        path: openwrt/bin/Firmware
        
    - name: 上传bin目录
      uses: actions/upload-artifact@main
      if: env.UPLOAD_BIN_DIR == 'true' && !cancelled()
      with:
        name: OpenWrt_bin_${{ env.Artifacts_DATE }}
        path: openwrt/bin

    - name: 上传固件到Releases
      uses: softprops/action-gh-release@v1
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      with:
        tag_name: AutoUpdate
        body_path: update_log.txt
        files: openwrt/bin/Firmware/*

    - name: 删除旧的Artifacts
      uses: c-hive/gha-remove-artifacts@v1
      with:
        age: '1 day'
        skip-recent: 3
